// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Senai.CodeTur.Infra.Data.Contextos;

namespace Senai.CodeTur.Infra.Data.Migrations
{
    [DbContext(typeof(CodeTurContext))]
    partial class CodeTurContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Senai.CodeTur.Dominio.Entidades.PacoteDominio", b =>
                {
                    b.Property<int>("IdPacote")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnName("DataFinal")
                        .HasColumnType("DATETIME2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnName("DateTime")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("Descrição")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagem")
                        .HasColumnName("Imagem")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Oferta")
                        .HasColumnName("Oferta")
                        .HasColumnType("bit");

                    b.Property<string>("País")
                        .IsRequired()
                        .HasColumnName("Pais")
                        .HasColumnType("VARCHAR(128)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("VARCHAR(128)");

                    b.HasKey("IdPacote");

                    b.ToTable("Pacotes");

                    b.HasData(
                        new { IdPacote = 1, Ativo = true, DataFinal = new DateTime(2020, 2, 3, 0, 0, 0, 0, DateTimeKind.Local), DataInicial = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "Instituto de Tecnologia de Massachusetts", Imagem = "https://www.estudarfora.org.br/app/uploads/2018/01/mestrado-no-MIT.jpg", Oferta = false, País = "Massachusetts, Estados Unidos", Titulo = "Intercâmbio" }
                    );
                });

            modelBuilder.Entity("Senai.CodeTur.Dominio.Entidades.UsuarioDominio", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnName("Tipo")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new { IdUsuario = 1, Email = "fernando.guerra@sp.senai.br", Senha = "senai132", Tipo = "Administrador" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
